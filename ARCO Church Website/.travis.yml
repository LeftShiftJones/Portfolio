sudo: true
os: ubuntu
ubuntu: 
        - 18.04
env:
        global:
                - FLASK_CONFIG=staging-ci 
before_install:
        - sudo apt-get update
matrix:
        include:
                - language: node_js
                  node_js: "11"
                  install:
                        - cd ui/
                          #- yarn cache clean
                          #- yarn check
                        - yarn install
                          #- sudo apt install yarn
                          #- yarn upgrade
                        - yarn add cypress 
                          # - yarn upgrade cypress
                  script:
                          # ./eslintrc-ci.sh
                        - yarn build
                        - cd ../
                - language: python
                  python: "3.7"
                  dist: "xenial"
                  sudo: true
                  env: 
                        - FLASK_APP=cc-api.py
                  install:
                        - pip install -r api/requirements.txt
                          #- pip install -U pytest
                        - cd api/
                        - sudo apt install postgresql
                        - sudo apt install nginx
                        - sudo service postgresql start
                  postgres:
                        adapter: postgresql
                        database: cc-staging
                  script:
                        - createuser arco
                        - createdb --owner=arco cc-staging
                          # -    cp thing in to private.py
                        - ./private-ci.sh
                        - flask db upgrade
                        - flask data load-all
                        - sudo nginx -t
                        - sudo systemctl restart nginx
                        - cd ../
                          #- pytest
                  after_success:
                        - eval "$(ssh-agent -s)"
                        - chmod 600 .travis/depoy_key.pem
                        - ssh-add .travis/deploy_key.pem
                        - git remote add deploy https://github.com/corpus-christi/corpus-christi.git
                        - git push deploy
# create script by configuration and make file
# fix flask data load-al112
notifications:       
        slack: tumissionscomputing:wp25PPGEFitgDVKamhxxq6jU
deploy:
        provider: script
        script: bash scripts/deploy.sh
        on:
                branch: development
